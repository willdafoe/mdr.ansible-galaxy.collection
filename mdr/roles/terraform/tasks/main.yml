---
# tasks file for terraform
- name: "[role.terraform] setting terraform command"
  ansible.builtin.set_fact:
    command: '{{ item.value.name }}'
    state: '{{ item.value.state }}'
  when: tf_command is in item.key
  loop: "{{ lookup('ansible.builtin.dict', terraform_command, wantlist=True) }}"

# Plan
- name: "[role.terraform] running terraform plan"
  block:
  - name: "[role.terraform] generating configuration template"
    include_tasks: template.yml
  
  - name: "[role.terraform] checking if plan file exists"
    ansible.builtin.stat:
      path: '{{ plan_file }}'
    register: run_plan
  
  - name: "[role.terraform] running plan"
    include_tasks: plan.yml
    when: run_plan.stat.exists == false
  when: command == "plan"
# Apply
- name: "[role.terraform] running terraform apply"
  block:
  - name: "[role.terraform] checking if apply can run"
    ansible.builtin.stat:
      path: '{{ plan_file }}'
    register: run_apply
  
  - name: "[role.terraform] running apply"
    include_tasks: apply.yml
    when: run_apply.stat.exists == true
  when: command == "apply"
# Destroy
- name: "[role.terraform] running terraform destroy"
  block:
  - name: "[role.terraform] checking if destroy can run"
    ansible.builtin.stat:
      path: '{{ state_file }}'
    register: run_destroy
  
  - name: "[role.terraform] running destroy"
    include_tasks: destroy.yml
    when: run_destroy.stat.exists == true
  when: command == "destroy"


